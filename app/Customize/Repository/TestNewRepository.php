<?php

/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.
 *
 * http://www.ec-cube.co.jp/
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Customize\Repository;

use Eccube\Entity\Gad;
use Symfony\Bridge\Doctrine\RegistryInterface;
use Eccube\Repository\AbstractRepository;

/**
 * CustomizeProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TestProductRepository extends AbstractRepository
{
    /**
     * CustomizeProductRepository constructor.
     *
     * @param RegistryInterface $registry
     */
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, Product::class);
    }

    public function customFindName($name)
    {
        $qb = $this->createQueryBuilder('p')
            ->where('p.name = :name')
            ->setParameter('name', $name)
            ->orderBy('p.id', 'DESC');
        $product = $qb
            ->getQuery()
            ->getSingleResult();
        return $product;
    }

    /**
     * 産地更新
     *
     * @param integer $productId
     * @param string $name
     *
     * @return Product
     */
    public function customUpdateProductionArea($productId, $productionArea)
    {
        dump($productId);
        $id = intval($productId);
        $Product = $this->find($id);
        $area = (!empty($productionArea)) ? $productionArea : null;
        $Product->setProductionArea($area);

        $em = $this->getEntityManager();
        $em->persist($Product);//永続化対象のエンティティを設定
        $em->flush($Product);//永続化

        return $this->find($id);
    }
}
